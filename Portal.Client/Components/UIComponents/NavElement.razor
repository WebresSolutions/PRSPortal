<li class="nav-item">
	<NavLink href="@Link.Link" Match="NavLinkMatch.All">
		@if (Link.Icon is not null)
		{
			<i class="@Link.Icon fw-bold"></i>
		}
		@if (!Minimize)
		{
			<span class="ms-2">
				@Link.Title
			</span>
		}

	</NavLink>
	@if (Link.SubLinks.Length is not 0 && !Minimize)
	{
		@if (showSublinks)
		{
			<i class="bi bi-chevron-compact-up ms-2" role="button" @onclick="ToggleSublinks"></i>
		}
		else
		{
			<i class="bi bi-chevron-compact-down ms-2" role="button" @onclick="ToggleSublinks"></i>
		}
	}
</li>
@if (!Minimize)
{
	<li>
		<ul class=@(showSublinks ? "sublinks show" : "sublinks hide")>
			@foreach (NavigationLink sublink in Link.SubLinks)
			{
				<li class="sublink-item nav-item">
					<NavLink href="@sublink.Link" class="">
						@if (sublink.Icon is not null)
						{
							<i class="@sublink.Icon me-2 fw-bold"></i>
						}
						@sublink.Title
					</NavLink>
				</li>
			}
		</ul>
	</li>
}

@code {
	[Parameter]
	public required NavigationLink Link { get; set; }

	[Parameter]
	public required bool Minimize { get; set; }

	private bool showSublinks = false;

	private void ToggleSublinks() => showSublinks = !showSublinks;
}

<style>
	.sublinks {
		margin-left: 1rem;
		border-left: solid 2px var(--color-primary);
		padding: 3px;
	}

		.sublinks.hide {
			display: none;
		}

		.sublinks.show {
			display: block;
			transition: ease-in-out 50ms;
		}

	.sublink-item {
		margin-left: 2px;
	}
</style>