
<nav class="sidebar d-flex ps-2 gap-2 flex-column">
	<FluentButton OnClick="@(MinimizeSidebar)" Appearance="Appearance.Lightweight"><i class="bi bi-list"></i></FluentButton>
	<div class="sidebar-top">
		<ul class="nav flex-column">
			@foreach (KeyValuePair<string, NavigationLink> link in links)
			{
				<NavElement Link=@link.Value Minimize="minimize" />
			}
		</ul>
	</div>
	<div class="auth-controls">
		<AuthorizeView>
			<Authorized>
				<i class="bi bi-person-vcard btn" href="authentication/profile"></i>
				<i class="bi bi-box-arrow-left btn" @onclick="BeginSignOut" />
			</Authorized>
		</AuthorizeView>
	</div>
</nav>

@code {
	[Parameter]
	public required Action ToggleNav { get; set; }

	[Parameter]
	public required EventCallback Hide { get; set; }

	private bool minimize = false;

	private async Task MinimizeSidebar()
	{
		minimize = !minimize;
		await Hide.InvokeAsync();
	}

	private string width() => minimize ? "width: 40px" : "width: 120px";

	private readonly Dictionary<string, NavigationLink> links = new()
	{
		{ "Home", new NavigationLink(){Link = "", Title = "Home", Icon = "bi bi-house"} },
		{ "Jobs", new NavigationLink(){Link = "jobs", Title = "Jobs", Icon = "bi bi-wrench",
		SubLinks = [
		new NavigationLink() { Link = "tasks", Title = "Tasks", Icon = "bi bi-list-task"},
		new NavigationLink() { Link = "notes", Title = "Notes", Icon = "bi bi-journal"},
		new NavigationLink() { Link = "invoices", Title = "Invoices", Icon = "bi bi-card-text" }
		]}
		},
		{ "Quotes", new NavigationLink(){Link = "quotes", Title = "Quotes", Icon = "bi bi-receipt" } },
		{ "Councils", new NavigationLink(){Link = "councils", Title = "Councils",Icon = "bi bi-people-fill"} },
		{ "Tools", new NavigationLink(){Link = "tools", Title = "Tools",Icon = "bi bi-hammer"} },
		{ "Admin", new NavigationLink(){Link = "admin", Title = "Admin",Icon = "bi bi-sliders"} },
		{ "Schedule", new NavigationLink(){Link = "schedule", Title = "Schedule", Icon = "bi bi-calendar"} }
	};

	private void BeginSignOut(MouseEventArgs args)
	{
		_navigationManager.NavigateToLogout("authentication/logout");
	}
}